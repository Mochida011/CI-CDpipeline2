name: Build and Deploy to Pages

on: 
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  buildForAllPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneOSX
          - StandaloneWindows
          - StandaloneWindows64
          - WebGL
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      
      - name: Cache Library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-${{ matrix.targetPlatform }}-
            Library-
      
      - name: Free Disk Space (Android)
        if: matrix.targetPlatform == 'Android'
        uses: jlumbroso/free-disk-space@v1.3.1
      
      - name: Build Unity Project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
          retention-days: 1

  deploy:
    needs: buildForAllPlatforms
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Download WebGL Build
        uses: actions/download-artifact@v3
        with:
          name: build-WebGL
          path: webgl-build
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Prepare public directory
        run: |
          # Create public directory
          mkdir -p public
          
          # Move WebGL build contents to public folder
          mv webgl-build/* public/
          
          # Cleanup temporary directory
          rm -rf webgl-build
      - name: Move WebGL contents to public
        run: |
          # Move all contents of WebGL folder up to public folder
          mv public/WebGL/* public/
          
          # Optional: Clean up the empty WebGL directory
          rm -rf public/WebGL
      - name: List files in public directory
        run: ls -R public
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
